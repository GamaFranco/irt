#!/usr/bin/env ruby

require 'rubygems'
require 'fileutils'
require 'tempfile'
require 'optparse'
require 'prompter'
require 'dye'


version = File.read(File.expand_path('../../VERSION', __FILE__)).strip

copy = Dye.dye "irt #{version} (c) 2010-2011 Domizio Demichelis", :blue, :bold

options = {}

optparse = OptionParser.new do |opts|

  opts.banner = <<EOB
Interactive Ruby Tools:
    Improved irb and rails console with lots of easy and powerful tools.
Usage:
    irt [PATH] [options]
Options:
EOB

  options[:interactive_eof]
  opts.on( '-i', '--interactive-eof', 'Opens an interactive session at EOF') do
    options[:interactive_eof] = true
  end

  options[:irb_options] = nil
  opts.on( '-b', '--irb-options [OPTIONS]', 'Sets the irb Options' ) do |opt|
    options[:irb_options] = opt
  end

  options[:rails_env] = 'development'
  opts.on( '-r', '--rails-env [ENVIRONMENT]', 'Sets the Rails Environment' ) do |env|
     options[:rails_env] = env
   end

  opts.on( '-v', '--version', 'Shows the version and exits' ) do
    puts version
    exit
  end

  opts.on( '-h', '--help', 'Display this screen' ) do
    puts copy
    puts opts
    exit
  end

end

optparse.parse!

puts copy

paths = if ARGV.empty?
          options[:interactive_eof] = true
          [ Tempfile.new(%w[tmp- .irt]).path ]
        else
          ARGV.map {|p| File.expand_path(p) }
        end

files = paths.map do |path|
          unless File.exists?(path)
            next if Prompter.no? %(Do you want to create the file "#{path}"?), :hint => '[<enter=y|n]', :default => 'y'
            options[:interactive_eof] = true
            dirname = File.dirname(path)
            FileUtils.mkdir_p(dirname) unless File.directory?(dirname)
            FileUtils.touch(path)
          end
          File.directory?(path) ? Dir.glob(File.join(path, '**/*.irt')) : path
        end.flatten

if files.empty?
  Prompter.say_notice 'No *.irt files to run'
  exit
end

cmd_format = if File.exists?('./config/environment.rb')
               if File.exists?('./script/rails')
                 'rails c %s %s %s'
               elsif File.exists?('./script/console')
                 'ruby script/console --irb="irt_rails2"'
               end
             else
               'irt_irb %s %s'
             end

if cmd_format.match(/^ruby script\/console/)
  ENV['RAILS_ENV'] ||= options[:rails_env]
end

ENV['IRT_INTERACTIVE_EOF'] = options[:interactive_eof].inspect if options[:interactive_eof]

files.each do |file|
  ENV['IRT_COMMAND'] = sprintf cmd_format, file, options[:irb_options], options[:rails_env]
  unless system(ENV['IRT_COMMAND'])
    puts "\e[0m" if Dye.color?
    exit(1)
  end
end
